Install vmwareworkstation
Install virtualbox

#STEP_-0

+ remove all partition and volume

sgdisk -Z /dev/sda
vgremove archlvm

#STEP_00

Download iso of archlinux

create virtual machine 50G

Insert iso archlinux inside your virtualmachine

lunch your virtual machine with boot and with the iso of archlinux.

#STEP_1

loadkey us

#STEP_2

enable the ssh for remote from your computer (is very simple with remote ssh ^^)

passwd 

and write mdp toor

check status of ssh service

systemctl status
systemctl start

#STEP_3

+ make partition 1 512Mo

sgdisk /dev/sda -n1:0Mib:513MiB -t1:EF00

+ make partiton 2 with the next all

sgdisk /dev/sda -n2:+0:-0

#STEP_4

+ Initialisatione of physical volume 

pvcreate /dev/sda2

#STEP_5

+ make volume logic 

vgcreate archlvm /dev/sda2

#STEP_6

+ make logic volum

#lvcreate -L 5G -n root archlvm
lvcreate -L 10G -n root archlvm
lvcreate -L 2G -n swap archlvm
lvcreate -L 1G -n tmp archlvm
lvcreate -l 100%FREE -n home archlvm

#STEP_7 

+ make cryto for boot partition

#cryptsetup luksFormat -c aes-xts-plain64 -s 512 /dev/archlvm/root


cryptsetup --type luks2 --pbkdf argon2id --cipher serpent-xts-plain64 --key-size 512 --hash sha512 --use-random --verify-passphrase luksFormat /dev/archlvm/root

#STEP_8

+ test your crypto

cryptsetup open /dev/archlvm/root root

#STEP_9

+ make filesystem and mount 

mkfs.xfs /dev/mapper/root
mount /dev/mapper/root /mnt

#STEP_9

+ build and  mount partition of boot

mkfs.fat -F32 /dev/sda1
mkdir /mnt/boot
mount /dev/sda1 /mnt/boot

#STEP_10

+ Install paquet

pacman -Sy pacman-contrib

#STEP_11

+ backup original mirror 

cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup

#STEP_12

+ select best mirror ranked and add

rankmirrors -n 3 /etc/pacman.d/mirrorlist.backup > /etc/pacman.d/mirrorlist

#STEP_13

+ Install base system paquet


pacstrap /mnt base base-devel go lvm2 nmap jq curl cryptsetup xfsprogs linux-lts linux-lts-headers linux-firmware zip unzip p7zip mlocate vim alsa-utils syslog-ng mtools dosfstools lsb-release ntfs-3g exfat-utils bash-completion zsh zsh-completions git grub efibootmgr os-prober

#STEP_14

+ make fstab

genfstab -Up /mnt >> /mnt/etc/fstab

#STEP_15

+ go to inside root of install 

arch-chroot /mnt

#STEP_16

+ make name for your system

echo nosecure > /etc/hostname

#STEP_17

+ add machine inside host file 

echo '127.0.1.1 nosecure.local nosecure' >> /etc/hosts

#STEP_18

+ make time world

ln -sf /usr/share/zoneinfo/Europe/Paris /etc/localtime

#STEP_19
+ edit file vim /etc/locale.gen

sed -i 's/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen

locale-gen

#STEP_20

+ define language 

echo LANG="en_US.UTF-8" > /etc/locale.conf

#STEP_21

+ define keboard like vim /etc/locale.conf

echo KEYMAP=us > /etc/vconsole.conf

#STEP_22

+ install and enable network for next start of the system

pacman -Sy networkmanager
systemctl enable NetworkManager

#STEP_23

+ enable color vim /etc/pacman.conf

sed -i 's/#Color/Color/g' /etc/pacman.conf
sed -i 's/#UseSyslog/UseSyslog/g' /etc/pacman.conf

+ remove # for enable libs 32b vim /etc/pacman.conf

[multilib]
Include = /etc/pacman.d/mirrorlist

sed -i '93 s/^#//' /etc/pacman.conf
sed -i '94 s/^#//' /etc/pacman.conf

#STEP_24

+ enable forward syslog vim /etc/systemd/journald.conf

ForwardToSyslog=yes

sed -i 's/#ForwardToSyslog=no/ForwardToSyslog=yes/g' /etc/systemd/journald.conf

#STEP_25

+ edit vim /etc/mkinitcpio.conf for enable lvm2 and add arg in the ligne HOOK=()

keyboard keymap lvm2 encrypt udev



sed -i 's/HOOKS=(base udev autodetect modconf block filesystems keyboard fsck)/HOOKS=(base udev autodetect modconf block filesystems keyboard keymap lvm2 encrypt udev fsck)/g' /etc/mkinitcpio.conf


#STEP_26

+ generate noyau image

mkinitcpio -p linux-lts

#STEP_27

+ check if efivar is mounted

mount | grep efivar

+ if not

mount -t efivarfs efivarfs /sys/firmware/efi/efivars

#STEP_28

+ configure grub , remote empty ligne 

sed -i '/GRUB_CMDLINE_LINUX=/d' /etc/default/grub

#STEP_29

+ enable grub 

sed -i 's/#GRUB_ENABLE_CRYPTODISK=y/GRUB_ENABLE_CRYPTODISK=y/' /etc/default/grub

#STEP_29

+ add root with UUID

echo GRUB_CMDLINE_LINUX=\"cryptdevice=UUID=$(blkid -s UUID -o value /dev/mapper/archlvm-root):root root=/dev/mapper/root\" >> /etc/default/grub

#STEP_30

+ install grub

grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=arch_grub --recheck

#STEP_31

+ generate grub.cfg

grub-mkconfig -o /boot/grub/grub.cfg

#STEP_32

+ generate key file

mkdir -m 700 /etc/luks-keys
dd if=/dev/random of=/etc/luks-keys/home bs=1 count=256 status=progress

#STEP_33

+ make crypt home 

#cryptsetup luksFormat -v -s 512 /dev/archlvm/home /etc/luks-keys/home

#STEP_34

+ add crypto inside mapper

cryptsetup -d /etc/luks-keys/home open /dev/archlvm/home home

#STEP_35

+ format 

mkfs.xfs /dev/mapper/home

+ mount partition

mount /dev/mapper/home /home

#STEP_36

+ need uncrypt partition when you boot need edit file

+ vim /etc/crypttab

home /dev/mapper/archlvm-home  /etc/luks-keys/home
swap /dev/mapper/archlvm-swap  /dev/urandom  swap,cipher=serpent-xts-plain64,size=256
tmp  /dev/mapper/archlvm-tmp   /dev/urandom  tmp,cipher=serpent-xts-plain64,size=256

+ vim /etc/fstab

/dev/mapper/tmp   /tmp   tmpfs  defaults  0  0
/dev/mapper/swap  none   swap   sw  0  0
/dev/mapper/home  /home  xfs    defaults  0  2

#STEP_37

+ make user

useradd -mG wheel -s /usr/bin/zsh -c "operator" operator

#STEP_38

+ make user sudoers remove # %wheel ALL=(ALL) ALL in visudo /etc/sudoers

%wheel ALL=(ALL) ALL

#STEP_39

+ enable time ntp and deamon cron and syslog-ng

pacman -S cronie ntp

systemctl enable cronie
systemctl enable ntpd
systemctl enable syslog-ng

#STEP_40

+ enable tlp for batterie

#STEP_41

+ install driver for graphic card

pacman -S xorg-{server,xinit,apps} xdg-user-dirs xf86-video-intel mesa lib32-mesa

#STEP_42 

+ install cpu

pacman -Sy intel-ucode

#STEP_43

+ install audio codec

pacman -S gst-libav gst-plugins-{base,good,bad,ugly}

#STEP_44

+ install fonts

pacman -S xorg-fonts-type1 gsfonts sdl_ttf ttf-{dejavu,bitstream-vera,liberation} noto-fonts-{cjk,emoji,extra}

#STEP_45

+ install yay

+ switch user 

su - operator

+ install yay

git clone https://aur.archlinux.org/yay
cd yay




